#see https://ffmpeg.org/documentation.html
#Powershell commands to create video from images:

#create .mp4 video from exudyn tga/png images:
./ffmpeg.exe -r 25 -start_number 0 -i frame%05d.tga -c:v libx264 -vf "fps=25,format=yuv420p" animation.mp4
./ffmpeg.exe -r 25 -start_number 0 -i frame%05d.png -c:v libx264 -vf "fps=25,format=yuv420p" animation.mp4

#convert frame rate:
./ffmpeg -i input.mkv -r 16 -filter:v "setpts=0.25*PTS" output.mkv

#split videos into smaller parts: (-ss startTimeInSeconds -t durationInSeconds):
ffmpeg -i source-file.mp4 -ss 1200 -t 600 file_part.mp4

#concatenate videos (re-encode):
ffmpeg -i part1.mkv -i part2.mkv -filter_complex "[0:v] [0:a] [1:v] [1:a] concat=n=2:v=1:a=1 [v] [a]" -map "[v]" -map "[a]" output.mkv

#concatenate without re-encodeing, but no audio if both parts are not re-encoded with ffmpeg -i a.mkv b.mkv :
#file test.txt must contain file names PER LINE with KEYWORD file:file 'part1.mkv'
ffmpeg -f concat -safe 0 -i test.txt -c copy output.mkv
ffmpeg -f concat -safe 0 -i test.txt output.mkv

#concatenate with overlay:
ffmpeg -y -i v1.avi -i v2.avi  -i v3.avi -f lavfi -i color=black:s=1920x1080 -filter_complex "[0:v]format=pix_fmts=yuva420p,fade=t=out:st=10:d=1:alpha=1,setpts=PTS-STARTPTS[v0]; [1:v]format=pix_fmts=yuva420p,fade=t=in:st=0:d=1:alpha=1,fade=t=out:st=10:d=1:alpha=1,setpts=PTS-STARTPTS+10/TB[v1];  [2:v]format=pix_fmts=yuva420p,fade=t=in:st=0:d=1:alpha=1,fade=t=out:st=10:d=1:alpha=1,setpts=PTS-STARTPTS+20/TB[v2];  [3:v]trim=duration=30[over];  [over][v0]overlay[over1];  [over1][v1]overlay[over2];  [over2][v2]overlay=format=yuv420[outv]" -vcodec libx264 -map [outv] merge.mp4

#overlay text, start at 4.5 seconds, comes from right:
ffmpeg -i input.avi -vf "drawtext=text=string1:fontfile=foo.ttf:y=h-line_h-10:x=w-(t-4.5)*w/5.5:fontcolor=white:fontsize=40:shadowx=2:shadowy=2" output.mp4

#make smaller videos (-crf 10: very high quality, -crf 40: very low quality):
ffmpeg.exe -i source.mp4 -vcodec libx264 -crf 30 output.mp4

#make videos faster (2x):
ffmpeg -i input.mkv -filter:v "setpts=0.5*PTS" output.mkv

#to avoid dropped frames due to higher output frame rate, for input with 10 FPS -> output 40 FPS (4x):
ffmpeg -i input.mkv -r 40 -filter:v "setpts=0.25*PTS" output.mkv

#smoothen frame rate interpolation:
ffmpeg -i input.mkv -filter:v "minterpolate='mi_mode=mci:mc_mode=aobmc:vsbmc=1:fps=120'" output.mkv

#remove audio:
ffmpeg -i input.mkv -c copy -an output.mkv

#scale to 720p, small videos:
ffmpeg -i test.mp4 -vf scale=-1:720 -crf 35 test2.mp4

#crop:
ffmpeg -i test.mp4 -filter:v "crop=1445:1080:0:0" test2.mp4

#exract audio (for better quality use vlc):
ffmpeg -i output.mkv -q:a 0 -map a output.mp3
ffmpeg -i output.mkv -f mp3 -ab 192000 -vn sound1.mp3

#mix audio (better if mp3 with higher quality comes first?):
ffmpeg -i sound2.mp3 -i sound1.mp3 -filter_complex amix=inputs=2:duration=longest -ab 192000 soundmix.mp3
ffmpeg -i sound2.mp3 -i sound1.mp3 -filter_complex amix=inputs=2:duration=shortest -ab 192000 soundmix.mp3

#replace audio in video:
ffmpeg -i file.mkv -i soundmix.mp3 -map 0:v -map 1:a -c:v copy -shortest file.mp4

#convert video for higher compatibility:
ffmpeg -i file.mp4 -c:v libx264 -crf 23 -profile:v baseline -level 3.0 -pix_fmt yuv420p -c:a aac -ac 2 -b:a 256k -movflags faststart newFile.mp4

#combine/concatenate 3 videos (including audio):
ffmpeg -i v1c.mkv -i v2c.mkv -i v3c.mkv -filter_complex "[0:v] [0:a] [1:v] [1:a] [2:v] [2:a] concat=n=3:v=1:a=1 [v] [a]" -map "[v]" -map "[a]" -crf 15 output.mkv

#documentation of drawtext:https://ffmpeg.org/ffmpeg-filters.html#drawtext-1
#move in text vertically up to certain position; use \, for commas!; text centered horizontally; use special font STENCIL ... 
ffmpeg -y -i v1b.avi -vf "drawtext=text=Text to be written:fontfile=/windows/fonts/STENCIL.TTF:y=0*h-line_h+if(lt(t\,0.5)\,t*1200\,600+50.*sin((t-0.5)*20)*exp(-6*(t-0.5))):x=(w-text_w)/2:enable=lt(t\,7):fontcolor=gray:fontsize=100:shadowx=2:shadowy=2" test.mkv

#create animated gifs from exudyn .pngs:
ffmpeg -i frame%05d.png -framerate 5 test.gif



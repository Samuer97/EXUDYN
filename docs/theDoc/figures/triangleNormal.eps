%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 112 542 237 669 
%%LanguageLevel: 2
%%Creator: CorelDRAW 2020 (64-Bit)
%%Title: triangleNormal.eps
%%CreationDate: Thu Dec  9 11:47:26 2021
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW 2020 (64-Bit) Version 22.1.0.517
/EpsFile true def
%%BeginResource: procset wCorel22Dict 22.0 0
/wCorel22Dict 300 dict def wCorel22Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Text support
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch 0 1 $fe length 1 sub{/encodingIndex xd dup
$fe encodingIndex get eq{$fe encodingIndex/.notdef put}if}for put 1 add}ifelse
}forall pop}if dup 256 dict dup/$met xd/Metrics exch put dup/FontMatrix get 0
get 1000 mul 1 exch div 3 index length 256 eq{0 1 255{dup $fe exch get dup
/.notdef eq{pop pop}{5 index 3 -1 roll get 2 index mul $met 3 1 roll put}
ifelse}for}if pop definefont pop pop}bd/CorelIsValidCharpath{pathbbox 3 -1 roll
sub abs 0.5 ge 3 1 roll sub abs 0.5 ge and}bd/@ftx{{currentpoint 3 -1 roll(0)
dup 3 -1 roll 0 exch put dup @gs true charpath $ctm setmatrix
CorelIsValidCharpath{@@txt}if @gr @np stringwidth pop 3 -1 roll add exch m}
forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp @ss}if $fil 1 eq
{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/gradient_fill ld @ftx}{$fil 3 eq{/@@txt
/@Pf ld @ftx}{$fil 4 eq{/@@txt/output_shading_gradient ld @ftx}{FillOverprint
safe_setoverprint FillColor/separate_set_color dexec{show}{pop}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/@st{matrix
currentmatrix exch $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint
safe_setoverprint OutlineColor/separate_set_color dexec{{currentpoint 3 -1 roll
(0)dup 3 -1 roll 0 exch put dup @gs true charpath $ctm setmatrix $ptm concat
stroke @gr @np stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr
@st}bd/@t@a{dup @gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}
def}bd/o{/t{pop}def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm
setmatrix/$ttm matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll
m $ttm concat ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd
/@l{}bd/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null
def/_bithibyte 0 def
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel22Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 595 841
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
145.32094 597.16970 183.12123 668.86980 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_outline
0 0.56693 0.56693 0.00000 @w
183.12123 597.16970 m
146.97468 665.73298 L
S
@j
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_outline
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 1.00800 1.00800 0 @w
145.32094 668.86980 m
145.93663 661.21795 L
147.24992 663.04970 149.03320 663.98995 151.28646 664.03843 C
145.32094 668.86980 L
f
@J

@rax %Note: Object
126.12217 587.30939 172.47231 614.37146 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_outline
0 1.41732 1.41732 0.00000 @w
126.12217 587.30939 m
172.47231 614.37146 L
S

@rax %Note: Object
208.17241 552.80948 220.92236 642.65953 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_outline
0 1.41732 1.41732 0.00000 @w
220.92236 642.65953 m
208.17241 552.80948 L
S

@rax %Note: Object
126.12217 552.80948 208.17241 587.30939 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_outline
0 1.41732 1.41732 0.00000 @w
208.17241 552.80948 m
126.12217 587.30939 L
S

@rax %Note: Object
174.87241 615.77263 220.92236 642.65953 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_outline
0 1.41732 1.41732 0.00000 @w
174.87241 615.77263 m
220.92236 642.65953 L
S

@rax %Note: Object
112.83817 579.64167 122.07997 587.84967 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
115.15408 582.77367 m
115.15408 580.72167 l
115.15408 580.43764 115.17619 580.24346 115.22211 580.14170 c
115.26605 580.03965 115.33606 579.96369 115.43017 579.91748 c
115.52428 579.86957 115.70825 579.84548 115.98208 579.84548 C
115.98208 579.64167 L
112.83817 579.64167 L
112.83817 579.84548 L
113.08620 579.85370 113.27017 579.92173 113.39008 580.05354 c
113.47030 580.14369 113.51027 580.37953 113.51027 580.75767 c
113.51027 586.55367 l
113.51027 586.94542 113.46406 587.19345 113.37222 587.30343 c
113.28009 587.41143 113.10208 587.47351 112.83817 587.48967 C
112.83817 587.69348 L
115.15408 587.69348 L
115.15408 586.97348 L
115.34627 587.25354 115.54016 587.45764 115.74028 587.58151 c
116.02403 587.75953 116.33414 587.84967 116.67005 587.84967 c
117.07200 587.84967 117.43824 587.72353 117.76819 587.46954 c
118.09814 587.21556 118.34816 586.86548 118.52022 586.41959 c
118.69200 585.97342 118.77817 585.49351 118.77817 584.97761 c
118.77817 584.42343 118.69002 583.91745 118.51200 583.45965 c
118.33427 583.00157 118.07603 582.65348 117.73814 582.41367 c
117.40224 582.17357 117.02608 582.05367 116.61222 582.05367 c
116.31203 582.05367 116.03027 582.11972 115.76806 582.25351 c
115.57417 582.35357 115.36809 582.52762 115.15408 582.77367 C
@c
115.15408 583.36554 m
115.49027 582.89159 115.85027 582.65348 116.23408 582.65348 c
116.44611 582.65348 116.62016 582.76346 116.75622 582.98570 c
116.96003 583.31367 117.06208 583.93559 117.06208 584.85345 c
117.06208 585.79569 116.95011 586.43943 116.72816 586.78554 c
116.57820 587.01543 116.38006 587.12967 116.12806 587.12967 c
115.73405 587.12967 115.40806 586.84564 115.15408 586.27757 C
115.15408 583.36554 L
@c
F

@rax %Note: Object
112.83817 579.64167 122.07997 587.84967 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
119.51206 581.77559 m
119.51206 582.22857 119.58009 582.61748 119.71701 582.94460 c
119.85420 583.27143 120.03506 583.51550 120.26211 583.67565 c
120.43701 583.80265 120.61899 583.86557 120.80608 583.86557 c
121.11109 583.86557 121.38406 583.71052 121.62614 583.40041 c
121.92917 583.01546 122.07997 582.49446 122.07997 581.83654 c
122.07997 581.37647 122.01420 580.98444 121.88098 580.66243 c
121.74803 580.34041 121.57909 580.10740 121.37301 579.96142 c
121.16721 579.81657 120.96822 579.74343 120.77717 579.74343 c
120.39817 579.74343 120.08296 579.96652 119.83096 580.41354 c
119.61808 580.79055 119.51206 581.24438 119.51206 581.77559 c
@c
120.08806 581.70359 m
120.08806 581.15764 120.15496 580.71146 120.28904 580.36535 c
120.40016 580.07452 120.56598 579.92939 120.78595 579.92939 c
120.89112 579.92939 120.99997 579.97644 121.11307 580.07140 c
121.22617 580.16636 121.31121 580.32454 121.37017 580.54762 c
121.45918 580.88239 121.50397 581.35663 121.50397 581.96665 c
121.50397 582.41962 121.45720 582.79748 121.36422 583.09965 c
121.29420 583.32444 121.20321 583.48346 121.09209 583.57644 c
121.01301 583.64164 120.91606 583.67367 120.80296 583.67367 c
120.67115 583.67367 120.55294 583.61357 120.45005 583.49452 c
120.31002 583.33266 120.21420 583.07839 120.16403 582.73058 c
120.11301 582.38362 120.08806 582.04148 120.08806 581.70359 c
@c
F

@rax %Note: Object
211.68822 542.44148 220.41411 550.64948 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
214.00413 545.57348 m
214.00413 543.52148 l
214.00413 543.23745 214.02624 543.04328 214.07216 542.94151 c
214.11609 542.83946 214.18611 542.76350 214.28022 542.71729 c
214.37433 542.66939 214.55830 542.64529 214.83213 542.64529 C
214.83213 542.44148 L
211.68822 542.44148 L
211.68822 542.64529 L
211.93625 542.65351 212.12022 542.72154 212.24013 542.85335 c
212.32035 542.94350 212.36031 543.17934 212.36031 543.55748 c
212.36031 549.35348 l
212.36031 549.74523 212.31411 549.99326 212.22227 550.10324 c
212.13014 550.21124 211.95213 550.27332 211.68822 550.28948 C
211.68822 550.49329 L
214.00413 550.49329 L
214.00413 549.77329 L
214.19631 550.05335 214.39020 550.25745 214.59033 550.38132 c
214.87408 550.55934 215.18419 550.64948 215.52009 550.64948 c
215.92205 550.64948 216.28828 550.52334 216.61824 550.26935 c
216.94819 550.01537 217.19820 549.66529 217.37027 549.21940 c
217.54205 548.77323 217.62822 548.29332 217.62822 547.77742 c
217.62822 547.22324 217.54006 546.71726 217.36205 546.25946 c
217.18431 545.80139 216.92608 545.45329 216.58819 545.21348 c
216.25228 544.97339 215.87613 544.85348 215.46227 544.85348 c
215.16208 544.85348 214.88031 544.91953 214.61811 545.05332 c
214.42422 545.15339 214.21814 545.32743 214.00413 545.57348 C
@c
214.00413 546.16535 m
214.34031 545.69140 214.70031 545.45329 215.08413 545.45329 c
215.29616 545.45329 215.47020 545.56328 215.60627 545.78551 c
215.81008 546.11348 215.91213 546.73540 215.91213 547.65326 c
215.91213 548.59550 215.80016 549.23924 215.57820 549.58535 c
215.42825 549.81524 215.23011 549.92948 214.97811 549.92948 c
214.58409 549.92948 214.25811 549.64545 214.00413 549.07739 C
214.00413 546.16535 L
@c
F

@rax %Note: Object
211.68822 542.44148 220.41411 550.64948 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
218.84202 546.19739 m
219.81317 546.66539 L
219.91011 546.66539 L
219.91011 543.31143 l
219.91011 543.08835 219.91918 542.94831 219.93817 542.89332 c
219.95717 542.83918 219.99515 542.79638 220.05411 542.76718 c
220.11307 542.73827 220.23326 542.72126 220.41411 542.71729 C
220.41411 542.60929 L
218.91402 542.60929 L
218.91402 542.71729 L
219.10224 542.72126 219.22299 542.73742 219.27713 542.76633 c
219.33213 542.79439 219.37011 542.83238 219.39222 542.88028 c
219.41320 542.92819 219.42425 543.07219 219.42425 543.31143 c
219.42425 545.45924 l
219.42425 545.74838 219.41405 545.93433 219.39506 546.01625 c
219.38117 546.07946 219.35622 546.12539 219.32022 546.15430 c
219.28309 546.18321 219.24000 546.19824 219.18926 546.19824 c
219.11613 546.19824 219.01521 546.16847 218.88624 546.10724 C
218.84202 546.19739 L
@c
F

@rax %Note: Object
227.13846 639.64176 236.34425 647.84976 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
229.45436 642.77376 m
229.45436 640.72176 l
229.45436 640.43773 229.47647 640.24356 229.52239 640.14180 c
229.56633 640.03975 229.63635 639.96378 229.73046 639.91757 c
229.82457 639.86967 230.00854 639.84557 230.28236 639.84557 C
230.28236 639.64176 L
227.13846 639.64176 L
227.13846 639.84557 L
227.38649 639.85380 227.57046 639.92183 227.69036 640.05364 c
227.77058 640.14378 227.81055 640.37962 227.81055 640.75776 c
227.81055 646.55376 l
227.81055 646.94551 227.76435 647.19354 227.67250 647.30353 c
227.58038 647.41153 227.40236 647.47361 227.13846 647.48976 C
227.13846 647.69357 L
229.45436 647.69357 L
229.45436 646.97357 L
229.64655 647.25364 229.84044 647.45773 230.04057 647.58161 c
230.32431 647.75962 230.63443 647.84976 230.97033 647.84976 c
231.37228 647.84976 231.73852 647.72362 232.06847 647.46964 c
232.39843 647.21565 232.64844 646.86557 232.82050 646.41969 c
232.99228 645.97351 233.07846 645.49361 233.07846 644.97770 c
233.07846 644.42353 232.99030 643.91754 232.81228 643.45975 c
232.63455 643.00167 232.37631 642.65357 232.03843 642.41376 c
231.70252 642.17367 231.32636 642.05376 230.91250 642.05376 c
230.61231 642.05376 230.33055 642.11981 230.06835 642.25361 c
229.87446 642.35367 229.66838 642.52772 229.45436 642.77376 C
@c
229.45436 643.36564 m
229.79055 642.89169 230.15055 642.65357 230.53436 642.65357 c
230.74639 642.65357 230.92044 642.76356 231.05650 642.98580 c
231.26031 643.31376 231.36236 643.93569 231.36236 644.85354 c
231.36236 645.79578 231.25039 646.43953 231.02844 646.78564 c
230.87849 647.01553 230.68035 647.12976 230.42835 647.12976 c
230.03433 647.12976 229.70835 646.84573 229.45436 646.27767 C
229.45436 643.36564 L
@c
F

@rax %Note: Object
227.13846 639.64176 236.34425 647.84976 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
236.34425 640.58145 m
236.06646 639.80957 L
233.72249 639.80957 L
233.72249 639.91956 L
234.41244 640.54857 234.89745 641.06164 235.17836 641.45962 c
235.45928 641.85761 235.60044 642.22157 235.60044 642.55153 c
235.60044 642.80353 235.52334 643.01074 235.36828 643.17260 c
235.21436 643.33474 235.03039 643.41553 234.81524 643.41553 c
234.61937 643.41553 234.44447 643.35969 234.28942 643.24658 c
234.13323 643.13376 234.01928 642.96765 233.94444 642.74967 C
233.83644 642.74967 L
233.88548 643.10854 234.01134 643.38463 234.21345 643.57767 c
234.41528 643.76957 234.66841 643.86567 234.97228 643.86567 c
235.29430 643.86567 235.56444 643.76164 235.78044 643.55471 c
235.99644 643.34750 236.10444 643.10372 236.10444 642.82167 c
236.10444 642.62069 236.05739 642.41858 235.96328 642.21761 c
235.81928 641.90154 235.58428 641.56649 235.26028 641.21272 c
234.77329 640.68265 234.47339 640.36460 234.35830 640.25972 C
235.38529 640.25972 l
235.59449 640.25972 235.74132 640.26765 235.82551 640.28268 c
235.90942 640.29855 235.98539 640.33058 236.05342 640.37849 c
236.12145 640.42554 236.18041 640.49357 236.23030 640.58145 C
236.34425 640.58145 L
@c
F

@rax %Note: Object
162.69222 653.45953 168.59594 659.09962 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
164.92422 658.94343 m
164.92422 658.23562 L
165.20400 658.53751 165.47414 658.75550 165.73209 658.89354 c
165.99005 659.03159 166.26614 659.09962 166.56208 659.09962 c
166.91811 659.09962 167.21206 659.00154 167.44620 658.80340 c
167.68006 658.60554 167.83597 658.35950 167.91420 658.06753 c
167.97600 657.84359 168.00803 657.41556 168.00803 656.78343 c
168.00803 654.64753 l
168.00803 654.22545 168.04602 653.96353 168.12198 653.85950 c
168.19795 653.75546 168.35613 653.69140 168.59594 653.66362 C
168.59594 653.45953 L
165.82422 653.45953 L
165.82422 653.66362 L
166.03200 653.69140 166.17997 653.77757 166.27011 653.92157 c
166.33219 654.01965 166.36422 654.26145 166.36422 654.64753 c
166.36422 657.08759 l
166.36422 657.53745 166.34608 657.82148 166.31206 657.93742 c
166.27606 658.05562 166.21824 658.14548 166.13405 658.21153 c
166.05014 658.27559 165.95802 658.30762 165.85597 658.30762 c
165.52205 658.30762 165.21222 658.07150 164.92422 657.59953 C
164.92422 654.64753 l
164.92422 654.23764 164.96220 653.97742 165.03817 653.86942 c
165.11414 653.75943 165.25616 653.69140 165.46422 653.66362 C
165.46422 653.45953 L
162.69222 653.45953 L
162.69222 653.66362 L
162.92211 653.68743 163.08425 653.76142 163.18205 653.88557 c
163.24809 653.97146 163.28013 654.22545 163.28013 654.64753 c
163.28013 657.75543 l
163.28013 658.17354 163.24214 658.43546 163.16617 658.53751 c
163.09020 658.64154 162.93203 658.70759 162.69222 658.73962 C
162.69222 658.94343 L
164.92422 658.94343 L
@c
F

@rax %Note: Object
132.39213 618.96898 166.29052 627.46469 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
134.99008 624.65698 m
135.80391 624.65698 136.45587 624.34885 136.94797 623.73090 c
137.36608 623.20479 137.57613 622.59874 137.57613 621.91474 c
137.57613 621.43483 137.45991 620.94898 137.23002 620.45688 c
137.00013 619.96479 136.68208 619.59288 136.27786 619.34287 c
135.87194 619.09285 135.42208 618.96898 134.92602 618.96898 c
134.11587 618.96898 133.47213 619.29099 132.99591 619.93474 c
132.59395 620.47899 132.39213 621.08674 132.39213 621.76280 c
132.39213 622.25490 132.51402 622.74472 132.75808 623.23087 c
133.00214 623.71672 133.32416 624.07672 133.72413 624.30888 c
134.12211 624.54076 134.54391 624.65698 134.99008 624.65698 c
@c
134.80809 624.27288 m
134.60202 624.27288 134.39395 624.21080 134.18391 624.08891 c
133.97613 623.96476 133.80605 623.75074 133.67792 623.44290 c
133.54809 623.13477 133.48403 622.73877 133.48403 622.25490 c
133.48403 621.47480 133.63994 620.80299 133.95005 620.23691 c
134.25987 619.67083 134.67005 619.38879 135.17802 619.38879 c
135.55587 619.38879 135.86797 619.54498 136.11402 619.85679 c
136.36006 620.16888 136.48394 620.70491 136.48394 621.46488 c
136.48394 622.41676 136.27786 623.16482 135.86797 623.71077 c
135.59187 624.08494 135.23811 624.27288 134.80809 624.27288 c
@c
F

@rax %Note: Object
132.39213 618.96898 166.29052 627.46469 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
143.06003 624.50079 m
143.06003 621.23698 l
143.06003 620.62498 143.07420 620.25080 143.10397 620.11276 c
143.13402 619.97698 143.18022 619.88088 143.24400 619.82674 c
143.30806 619.77288 143.38403 619.74482 143.47020 619.74482 c
143.59011 619.74482 143.72617 619.77883 143.87811 619.84488 C
143.96003 619.62888 L
142.35222 618.96898 L
142.08803 618.96898 L
142.08803 620.09490 L
141.62797 619.59883 141.27619 619.28901 141.03411 619.16088 c
140.79203 619.03276 140.53606 618.96898 140.26620 618.96898 c
139.96602 618.96898 139.70608 619.05487 139.48413 619.22891 c
139.26416 619.40296 139.11024 619.62690 139.02406 619.90101 c
138.93817 620.17483 138.89622 620.56091 138.89622 621.06094 c
138.89622 623.45679 l
138.89622 623.71077 138.86816 623.88680 138.81402 623.98488 c
138.75817 624.08296 138.67824 624.15893 138.57024 624.21080 c
138.46224 624.26494 138.26608 624.28876 137.98403 624.28479 C
137.98403 624.50079 L
139.86822 624.50079 L
139.86822 620.89880 l
139.86822 620.39679 139.95411 620.06882 140.12816 619.91291 c
140.30220 619.75474 140.51197 619.67679 140.75802 619.67679 c
140.92611 619.67679 141.11603 619.72894 141.33005 619.83496 c
141.54208 619.94098 141.79606 620.14280 142.08803 620.44101 C
142.08803 623.48088 l
142.08803 623.79071 142.03219 624.00076 141.92022 624.10876 c
141.80797 624.21874 141.57609 624.27685 141.22403 624.28479 C
141.22403 624.50079 L
143.06003 624.50079 L
@c
F

@rax %Note: Object
132.39213 618.96898 166.29052 627.46469 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
145.91622 626.26479 m
145.91622 624.50079 L
147.17027 624.50079 L
147.17027 624.10479 L
145.91622 624.09288 L
145.91622 620.61080 l
145.91622 620.26299 145.96611 620.02687 146.06617 619.90696 c
146.16425 619.78479 146.29209 619.72498 146.44828 619.72498 c
146.57811 619.72498 146.70227 619.76494 146.82416 619.84687 c
146.94406 619.92680 147.03817 620.04699 147.10422 620.20488 C
147.33213 620.20488 L
147.19606 619.81880 147.00217 619.52882 146.75216 619.33294 c
146.50016 619.13877 146.24220 619.04098 145.97631 619.04098 c
145.79631 619.04098 145.62028 619.09087 145.44822 619.19093 c
145.27616 619.29099 145.15030 619.43499 145.06809 619.62094 c
144.98617 619.80690 144.94422 620.09291 144.94422 620.48098 c
144.94422 624.10479 L
144.09213 624.10479 L
144.09213 624.29074 L
144.30813 624.37691 144.52809 624.52091 144.75430 624.72274 c
144.98022 624.92683 145.18035 625.16891 145.35808 625.45096 c
145.44822 625.59893 145.57408 625.87077 145.73622 626.26479 C
145.91622 626.26479 L
@c
F

@rax %Note: Object
132.39213 618.96898 166.29052 627.46469 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
151.14643 624.65698 m
151.14643 622.83288 L
150.95424 622.83288 L
150.80627 623.40491 150.61635 623.79298 150.38419 623.99877 c
150.15430 624.20485 149.85836 624.30888 149.50035 624.30888 c
149.22822 624.30888 149.00825 624.23688 148.84044 624.09288 c
148.67433 623.94888 148.59043 623.78872 148.59043 623.61298 c
148.59043 623.39471 148.65222 623.20677 148.77439 623.05087 c
148.89430 622.89099 149.14035 622.72091 149.51027 622.54091 c
150.36633 622.12677 l
151.15833 621.73899 151.55433 621.22876 151.55433 620.59691 c
151.55433 620.10879 151.37036 619.71477 151.00044 619.41685 c
150.63222 619.11893 150.21836 618.96898 149.76227 618.96898 c
149.43430 618.96898 149.05843 619.02680 148.63833 619.14076 c
148.50822 619.17874 148.40220 619.19688 148.32028 619.19688 c
148.23241 619.19688 148.16041 619.14898 148.11024 619.05288 C
147.91833 619.05288 L
147.91833 620.97279 L
148.11024 620.97279 L
148.22022 620.42485 148.42828 620.01099 148.73839 619.73291 c
149.04624 619.45483 149.39235 619.31679 149.77644 619.31679 c
150.04431 619.31679 150.26428 619.39474 150.43436 619.55291 c
150.60444 619.71080 150.69033 619.90299 150.69033 620.12494 c
150.69033 620.39282 150.59424 620.61874 150.40431 620.80299 c
150.21439 620.98696 149.83625 621.21685 149.26819 621.49691 c
148.70239 621.77698 148.33219 622.02898 148.15644 622.25688 c
147.98239 622.47883 147.89424 622.76088 147.89424 623.10076 c
147.89424 623.54296 148.04646 623.91288 148.34835 624.21080 c
148.65024 624.50872 149.04028 624.65698 149.52019 624.65698 c
149.73222 624.65698 149.98620 624.61077 150.28838 624.51893 c
150.48624 624.45883 150.61833 624.42879 150.68438 624.42879 c
150.74844 624.42879 150.79635 624.44296 150.83235 624.47074 c
150.86636 624.49880 150.90831 624.56088 150.95424 624.65698 C
151.14643 624.65698 L
@c
F

@rax %Note: Object
132.39213 618.96898 166.29052 627.46469 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
153.72652 627.46469 m
153.88838 627.46469 154.02841 627.40687 154.14435 627.29291 c
154.25830 627.17669 154.31641 627.03694 154.31641 626.87480 c
154.31641 626.71096 154.25830 626.56894 154.14435 626.45272 c
154.02841 626.33480 153.88838 626.27669 153.72652 626.27669 c
153.56239 626.27669 153.42038 626.33480 153.30444 626.45272 c
153.18652 626.56894 153.12841 626.71096 153.12841 626.87480 c
153.12841 627.03694 153.18652 627.17669 153.30047 627.29291 c
153.41641 627.40687 153.55843 627.46469 153.72652 627.46469 c
@c
154.20841 624.65698 m
154.20841 620.33698 l
154.20841 620.00277 154.23250 619.78082 154.28239 619.67083 c
154.33030 619.55887 154.40230 619.47694 154.49839 619.42280 c
154.59449 619.36894 154.77052 619.34088 155.02450 619.34088 C
155.02450 619.12488 L
152.42031 619.12488 L
152.42031 619.34088 L
152.68054 619.34088 152.85628 619.36696 152.94444 619.41685 c
153.03430 619.46674 153.10431 619.55093 153.15846 619.66687 c
153.21033 619.78280 153.23641 620.00674 153.23641 620.33698 c
153.23641 622.41279 l
153.23641 622.99077 153.21827 623.36494 153.18454 623.53672 c
153.15647 623.66088 153.11452 623.74677 153.05443 623.79496 c
152.99631 623.84485 152.91638 623.86894 152.81631 623.86894 c
152.70633 623.86894 152.57452 623.83890 152.41833 623.78079 C
152.33641 623.99679 L
153.95046 624.65698 L
154.20841 624.65698 L
@c
F

@rax %Note: Object
132.39213 618.96898 166.29052 627.46469 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
159.47461 619.74482 m
159.21241 619.46674 158.95644 619.26888 158.70643 619.14898 c
158.45641 619.02879 158.18655 618.96898 157.89855 618.96898 c
157.31263 618.96898 156.80041 619.21276 156.36246 619.70287 c
155.92450 620.19298 155.70652 620.82283 155.70652 621.59074 c
155.70652 622.35893 155.94860 623.06277 156.43247 623.70085 c
156.91861 624.33893 157.54054 624.65698 158.30249 624.65698 c
158.77446 624.65698 159.16649 624.50476 159.47461 624.20287 C
159.47461 625.19669 l
159.47461 625.80671 159.46044 626.18088 159.43039 626.32091 c
159.40035 626.46094 159.35443 626.55676 159.29263 626.60693 c
159.22857 626.65682 159.15061 626.68290 159.05650 626.68290 c
158.95446 626.68290 158.82038 626.65087 158.65058 626.58879 C
158.57461 626.80479 L
160.18243 627.46469 L
160.44661 627.46469 L
160.44661 621.26079 l
160.44661 620.63490 160.46050 620.25279 160.49055 620.11474 c
160.52060 619.97896 160.56652 619.88088 160.63257 619.82674 c
160.69635 619.77288 160.77260 619.74482 160.85849 619.74482 c
160.96450 619.74482 161.10454 619.77883 161.28255 619.84488 C
161.34633 619.62888 L
159.74447 618.96898 L
159.47461 618.96898 L
159.47461 619.74482 L
@c
159.47461 620.15499 m
159.47461 622.90488 l
159.45052 623.17276 159.38050 623.41682 159.26258 623.63480 c
159.14636 623.85477 158.99046 624.01890 158.79657 624.13087 c
158.60239 624.24085 158.41446 624.29698 158.23049 624.29698 c
157.88636 624.29698 157.57852 624.14277 157.30838 623.83493 c
156.95263 623.42872 156.77461 622.83685 156.77461 622.05676 c
156.77461 621.26872 156.94639 620.66494 157.29052 620.24485 c
157.63436 619.82674 158.01846 619.61698 158.44054 619.61698 c
158.79855 619.61698 159.14239 619.79698 159.47461 620.15499 C
@c
F

@rax %Note: Object
132.39213 618.96898 166.29052 627.46469 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_solid_fill
162.58252 622.47288 m
162.57855 621.67890 162.77272 621.05698 163.16249 620.60485 c
163.55254 620.15499 164.01260 619.92879 164.54069 619.92879 c
164.89049 619.92879 165.19663 620.02488 165.45657 620.21679 c
165.71650 620.40699 165.93449 620.74091 166.11052 621.21288 C
166.29052 621.09496 L
166.20860 620.55496 165.97049 620.06485 165.57647 619.62690 c
165.18246 619.18894 164.68866 618.96898 164.09650 618.96898 c
163.45247 618.96898 162.90057 619.21899 162.44249 619.72101 c
161.98469 620.22274 161.75452 620.89682 161.75452 621.74296 c
161.75452 622.65883 161.99065 623.37487 162.46063 623.88680 c
162.93061 624.40072 163.52050 624.65698 164.23058 624.65698 c
164.83068 624.65698 165.32447 624.45883 165.71055 624.06283 c
166.09663 623.66683 166.29052 623.13676 166.29052 622.47288 C
162.58252 622.47288 L
@c
162.58252 622.80879 m
165.06652 622.80879 L
165.04668 623.15291 165.00671 623.39471 164.94463 623.53474 c
164.84655 623.75272 164.70057 623.92479 164.50668 624.04894 c
164.31449 624.17480 164.11266 624.23688 163.90063 624.23688 c
163.57663 624.23688 163.28665 624.11074 163.03068 623.85874 c
162.77471 623.60674 162.62674 623.25694 162.58252 622.80879 C
@c
F

@rax %Note: Object
218.52227 640.25943 223.32246 645.05962 @E
/$fm 0 def
 0 O 0 @g
0.0000 0.0000 0.0000 0.0000  create_cmyk_color set_solid_fill
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_outline
0 1.41732 1.41732 0.00000 @w
220.92236 645.05962 m
222.24784 645.05962 223.32246 643.98501 223.32246 642.65953 c
223.32246 641.33405 222.24784 640.25943 220.92236 640.25943 c
219.59688 640.25943 218.52227 641.33405 218.52227 642.65953 c
218.52227 643.98501 219.59688 645.05962 220.92236 645.05962 c
@c
B

@rax %Note: Object
205.77231 550.40939 210.57250 555.20957 @E
/$fm 0 def
 0 O 0 @g
0.0000 0.0000 0.0000 0.0000  create_cmyk_color set_solid_fill
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_outline
0 1.41732 1.41732 0.00000 @w
208.17241 555.20957 m
209.49789 555.20957 210.57250 554.13496 210.57250 552.80948 c
210.57250 551.48400 209.49789 550.40939 208.17241 550.40939 c
206.84693 550.40939 205.77231 551.48400 205.77231 552.80948 c
205.77231 554.13496 206.84693 555.20957 208.17241 555.20957 c
@c
B

@rax %Note: Object
123.72208 584.90929 128.52227 589.70948 @E
/$fm 0 def
 0 O 0 @g
0.0000 0.0000 0.0000 0.0000  create_cmyk_color set_solid_fill
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000 1.0000  create_cmyk_color set_outline
0 1.41732 1.41732 0.00000 @w
126.12217 589.70948 m
127.44765 589.70948 128.52227 588.63487 128.52227 587.30939 c
128.52227 585.98391 127.44765 584.90929 126.12217 584.90929 c
124.79669 584.90929 123.72208 585.98391 123.72208 587.30939 c
123.72208 588.63487 124.79669 589.70948 126.12217 589.70948 c
@c
B

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel22Dict 22.0 0
%%EOF

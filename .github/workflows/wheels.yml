name: Wheels

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  # buildCIbuildUbuntu:
    # name: Build wheels on ${{ matrix.os }}
    # runs-on: ${{ matrix.os }}
    # strategy:
      # matrix:
        # os: [ubuntu-latest]
        # python-version: ['cp38-cp38', 'cp39-cp39', 'cp310-cp310', 'cp311-cp311', 'cp312-cp312']
        # #os: [ubuntu-latest, windows-latest, macos-latest]
        # #python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    # steps:
      # - uses: actions/checkout@v4

      # - name: Set up Python ${{ matrix.python-version }}
        # uses: actions/setup-python@v4
        # with:
          # #python-version: ${{ matrix.python-version }}
          # python-version: '3.10'

      # # - name: Install GLFW OpenGL
        # # run: |
          # # sudo apt-get install libglfw3 libglfw3-dev
          # # sudo apt-get install freeglut3 freeglut3-dev
          # # sudo apt-get install mesa-common-dev
          # # sudo apt-get install libx11-dev xorg-dev libglu1-mesa libglu1-mesa-dev libgl1-mesa-glx libgl1-mesa-dev
          # # libglew1.5 libglew1.5-dev 

      # #https://github.com/RalfG/python-wheels-manylinux-build/blob/master/full_workflow_example.yml
      # - uses: RalfG/python-wheels-manylinux-build@v0.7.1-manylinux2014_x86_64
        # with:
          # python-versions: ${{ matrix.python-version }} #'cp310-cp310'
          # build-requirements: 'numpy'
          # system-packages: 'mesa-libGL-devel mesa-libGLU-devel glfw glfw-devel'
          # pre-build-command: ''
          # package-path: 'main'
          # pip-wheel-args: '-w ./dist --no-deps'

      # - uses: actions/upload-artifact@v4
        # with:
          # name: wheels-linux-python-${{ matrix.python-version }}
          # path: ./main/dist/*manylinux2014_x86_64.whl

  buildWindows:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        python-version: ['3.8', '3.9'] #, '3.10', '3.11', '3.12']
        #os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel
      #working-directory: main  # Specify the directory where setup.py is located

    - name: Build wheels
      run: python -m cibuildwheel --output-dir .wheels
      env:
        CIBW_BUILD: "cp${{ matrix.python-version }}-*"
        #CIBW_BUILD: "cp39-*" #only the selected versions are built
        CIBW_SKIP: "*-win32"   #skip building 32-bit (win32) wheels
      working-directory: main  #specify the local dir where setup.py is located

    - uses: actions/upload-artifact@v4
      with:
        name: wheels-x86-python-${{ matrix.python-version }}
        path: main/.wheels/*.whl

/** ***********************************************************************************************
* @brief		Implementation for NodePointGround
*
* @author		Gerstmayr Johannes
* @date			2019-06-13 (generated)
* @pre			...
*
* @copyright    This file is part of Exudyn. Exudyn is free software: you can redistribute it and/or modify it under the terms of the Exudyn license. See 'LICENSE.txt' for more details.
* @note			Bug reports, support and further information:
* 				- email: johannes.gerstmayr@uibk.ac.at
* 				- weblink: https://github.com/jgerstmayr/EXUDYN
* 				
*
* *** Example code ***
*
************************************************************************************************ */

#include "Main/CSystemData.h"
#include "Autogenerated/CNodePointGround.h"				//includes ReleaseAssert.h, BasicDefinitions.h, ResizeableArray.h, LinkedDataVector.h

////for CallFunction(...)
//#include "Main/MainSystem.h"
//#include "Pymodules/PybindUtilities.h"
//#include "Autogenerated/MainNodePointGround.h"

//! provide according output variable in "value"
void CNodePointGround::GetOutputVariable(OutputVariableType variableType, ConfigurationType configuration, Vector& value) const
{
	switch (variableType)
	{
	case OutputVariableType::Position: value.CopyFrom(GetPosition(configuration)); break;
	case OutputVariableType::Displacement: value.CopyFrom(Vector3D(0.)); break;
	case OutputVariableType::Velocity: value.CopyFrom(GetVelocity(configuration)); break;
	case OutputVariableType::CoordinatesTotal:
	{
		if (IsValidConfiguration(configuration))
		{
			value = Vector();
		}
		else
		{
			PyError("CNodePointGround::GetOutputVariable: invalid configuration");
		}
		break;
	}
	case OutputVariableType::Coordinates:
	{
		if (IsValidConfiguration(configuration))
		{
			value = Vector();
		}
		else
		{
			PyError("CNodePointGround::GetOutputVariable: invalid configuration");
		}
		break;
	}
	case OutputVariableType::Coordinates_t:
	{
		if (IsValidConfigurationButNotReference(configuration))
		{
			value = Vector();
		}
		else
		{
			PyError("CNodePointGround::GetOutputVariable: invalid configuration");
		}
		break;
	}
	default:
		SysError("CNodePointGround::GetOutputVariable failed"); //error should not occur, because types are checked!
	}
}

